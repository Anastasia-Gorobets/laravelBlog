<?php

namespace App\Models;

use App\Scopes\DeleteAdminScope;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Support\Facades\Cache;

class BlogPost extends Model
{

    use HasFactory;

    use SoftDeletes;

    protected $fillable = ['title', 'content','user_id'];

    public function comments()
    {
        return $this->hasMany(Comment::class)->latestComments();
    }

    public function user()
    {
        return $this->belongsTo(User::class);

    }

    public function tags()
    {
        return $this->belongsToMany(Tag::class);
    }


    public function scopeLatestPosts(Builder $query)
    {
        return $query->orderBy('created_at','desc');

    }

    public function scopeMostCommented(Builder $query)
    {
        //comments_count
        return $query->withCount('comments')->orderBy('comments_count','desc');

    }

    public static function boot()
    {

        static::addGlobalScope(new DeleteAdminScope);

        parent::boot(); // TODO: Change the autogenerated stub

        static::deleting(function (BlogPost $blogPost){
            $blogPost->comments()->delete();
        });


        static::restoring(function (BlogPost $blogPost){
            $blogPost->comments()->restore();
        });


        static::updating(function (BlogPost $blogPost){
            Cache::forget("blog-post-$blogPost->id");
        });




    }


}
